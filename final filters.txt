# Skyler Kramer - Final set of filters for medicinal compounds
from __future__ import print_function
from rdkit import Chem
from rdkit.Chem import Descriptors as desc

smiles = ['C1=CC(=C(C=C1[N+](=O)[O-])[N+](=O)[O-])O', 'CCN(CC)CCCC(C)NC1=C2C=CC(=CC2=NC=C1)Cl', 'C1=CC=C(C=C1)Br', 'C1=CC=C(C=C1)F', 'C1=CC(=CC=C1Br)Br', 'O[Si]', '[CH3-].CC1=CC2=C(C=C1C)N(C=N2)C3C(C(C(O3)CO)OP(=O)([O-])OC(C)CNC(=O)CCC4(C(C5C6(C(C(C(=C(C7=NC(=CC8=NC(=C(C4=N5)C)C(C8(C)C)CCC(=O)N)C(C7(C)CC(=O)N)CCC(=O)N)C)[N-]6)CCC(=O)N)(C)CC(=O)N)C)CC(=O)N)C)O.[Co+3]', 'CC1=CC2=C(C=C1C)N(C=N2)C3C(C(C(O3)CO)OP(=O)([O-])OC(C)CNC(=O)CCC4(C(C5C6(C(C(C(=N6)C(=C7C(C(C(=N7)C=C8C(C(C(=N8)C(=C4[N-]5)C)CCC(=O)N)(C)C)CCC(=O)N)(C)CC(=O)N)C)CCC(=O)N)(C)CC(=O)N)C)CC(=O)N)C)O.[CH2-]C1C(C(C(O1)N2C=NC3=C(N=CN=C32)N)O)O.[Co+3]']

def ffilt(m):
    patterns = ['[$([NX3](=O)=O),$([NX3+](=O)[O-])][!#8]', '[#6][Cl]', '[#6][Br]', '[#6][F]', '[Si]', '[Co+3]', '[Co+2]', 'P']
    matches = []

    for i in range(len(patterns)):
        patt = Chem.MolFromSmarts(patterns[i])
        matches.append(len(m.GetSubstructMatches(patt)))

    arRingCount = desc.NumAromaticRings(m)

    if matches[0] < 2 and matches[1] < 3 and matches[2] < 2 and matches[3] < 6 and matches[4]==matches[5]==matches[6]==matches[7]==0 and arRingCount < 5:
        return(1)
    else:
        return(0)

for compound in smiles:
    print(ffilt(Chem.MolFromSmiles(compound)))